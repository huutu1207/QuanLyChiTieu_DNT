

import { ref, set, update } from "firebase/database";
import { useState } from 'react';
import { Alert, Button, StyleSheet, Text, View } from 'react-native';
import { database } from '../firebaseConfig';

const initialCategoriesData = [
  { id: '1', name: 'Mua s·∫Øm', icon: 'üõí' },
  { id: '2', name: 'ƒê·ªì ƒÉn', icon: 'üçî' },
  { id: '3', name: 'ƒêi·ªán tho·∫°i', icon: 'üì±' },
  { id: '4', name: 'Gi·∫£i tr√≠', icon: 'üé§' },
  { id: '5', name: 'Gi√°o d·ª•c', icon: 'üìñ' },
  { id: '6', name: 'S·∫Øc ƒë·∫πp', icon: 'üíÖ' },
  { id: '7', name: 'Th·ªÉ thao', icon: 'üèä' },
  { id: '8', name: 'X√£ h·ªôi', icon: 'üë•' },
  { id: '9', name: 'V·∫≠n t·∫£i', icon: 'üöå' },
  { id: '10', name: 'Qu·∫ßn √°o', icon: 'üëï' },
  { id: '11', name: 'Xe h∆°i', icon: 'üöó' },
  { id: '12', name: 'R∆∞·ª£u', icon: 'üç∑' },
  { id: '13', name: 'Thu·ªëc l√°', icon: 'üö≠' },
  { id: '14', name: 'Thi·∫øt b·ªã ƒêT', icon: 'üéß' },
  { id: '15', name: 'Du l·ªãch', icon: '‚úàÔ∏è' },
  { id: '16', name: 'S·ª©c kh·ªèe', icon: '‚ù§Ô∏è‚Äçü©π' },
  { id: '17', name: 'Th√∫ c∆∞ng', icon: 'üêæ' },
  { id: '18', name: 'S·ª≠a ch·ªØa', icon: 'üõ†Ô∏è' },
  { id: '19', name: 'Nh√† ·ªü', icon: 'üè†' },
  { id: '20', name: 'Nh√†', icon: 'üè°' },
  { id: '21', name: 'Qu√† t·∫∑ng', icon: 'üéÅ' },
  { id: '22', name: 'Quy√™n g√≥p', icon: 'üíñ' },
  { id: '23', name: 'V√© s·ªë', icon: 'üéüÔ∏è' },
  { id: '24', name: 'ƒê·ªì ƒÉn nh·∫π', icon: 'üç∞' },
  { id: 'add', name: 'Th√™m m·ªõi', icon: '+' },
];

const UploadCategoriesScreen = () => {
  const [status, setStatus] = useState('');

  // Ph∆∞∆°ng th·ª©c 1: S·ª≠ d·ª•ng set() ƒë·ªÉ ghi to√†n b·ªô danh s√°ch
  // D·ªØ li·ªáu t·∫°i 'categories' s·∫Ω b·ªã ghi ƒë√® ho√†n to√†n
  const handleUploadWithSet = async () => {
    setStatus('ƒêang t·∫£i l√™n (SET)...');
    try {
      const categoriesNode = {};
      initialCategoriesData.forEach(category => {
        categoriesNode[category.id] = {
          name: category.name,
          icon: category.icon,
          // b·∫°n c√≥ th·ªÉ th√™m c√°c tr∆∞·ªùng kh√°c n·∫øu mu·ªën, v√≠ d·ª•: order: parseInt(category.id) || 0
        };
      });

      await set(ref(database, 'categories'), categoriesNode);

      setStatus('');
      Alert.alert('Th√†nh c√¥ng', 'Danh s√°ch danh m·ª•c ƒë√£ ƒë∆∞·ª£c t·∫£i l√™n Firebase b·∫±ng SET!');
    } catch (error) {
      setStatus('');
      console.error("L·ªói khi t·∫£i l√™n (SET): ", error);
      Alert.alert('L·ªói', `C√≥ l·ªói x·∫£y ra: ${error.message}`);
    }
  };

  // An to√†n h∆°n v√¨ n√≥ ch·ªâ c·∫≠p nh·∫≠t c√°c ƒë∆∞·ªùng d·∫´n ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh
  const handleUploadWithUpdate = async () => {
    setStatus('ƒêang t·∫£i l√™n (UPDATE)...');
    try {
      const updates = {};
      initialCategoriesData.forEach(category => {
        // T·∫°o ƒë∆∞·ªùng d·∫´n cho t·ª´ng m·ª•c category: 'categories/ID_CUA_CATEGORY'
        updates[`categories/${category.id}`] = {
          name: category.name,
          icon: category.icon,
          // c√≥ th·ªÉ th√™m c√°c tr∆∞·ªùng kh√°c n·∫øu mu·ªën, v√≠ d·ª•: order: parseInt(category.id) || 0
        };
      });

      // ref(database) l√† tham chi·∫øu ƒë·∫øn g·ªëc c·ªßa database
      await update(ref(database), updates);

      setStatus('');
      Alert.alert('Th√†nh c√¥ng', 'Danh s√°ch danh m·ª•c ƒë√£ ƒë∆∞·ª£c t·∫£i l√™n Firebase b·∫±ng UPDATE!');
    } catch (error) {
      setStatus('');
      console.error("L·ªói khi t·∫£i l√™n (UPDATE): ", error);
      Alert.alert('L·ªói', `C√≥ l·ªói x·∫£y ra: ${error.message}`);
    }
  };

  return (
    <View style={styles.container}>
      <View style={styles.buttonContainer}>
        <Button title="T·∫£i l√™n d·ªØ li·ªáu m·∫´u" onPress={handleUploadWithUpdate} color="#4CAF50" />
      </View>
      {status ? <Text style={styles.statusText}>{status}</Text> : null}
      <Text style={styles.note}>
        L∆∞u √Ω: Vi·ªác n√†y th∆∞·ªùng ch·ªâ c·∫ßn th·ª±c hi·ªán m·ªôt l·∫ßn ƒë·ªÉ kh·ªüi t·∫°o d·ªØ li·ªáu danh m·ª•c.
      </Text>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
    backgroundColor: '#f9f9f9',
  },
  title: {
    fontSize: 22,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  buttonContainer: {
    width: '80%',
    marginVertical: 10,
  },
  statusText: {
    marginTop: 20,
    color: 'blue',
    fontSize: 16,
  },
  note: {
    marginTop: 30,
    textAlign: 'center',
    color: '#555',
    fontStyle: 'italic',
  }
});

export default UploadCategoriesScreen;